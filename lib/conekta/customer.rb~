module Conekta
  class Customer < APIResource
    include Conekta::APIOperations::Create
    include Conekta::APIOperations::Delete
    include Conekta::APIOperations::Update
    include Conekta::APIOperations::List

    def refresh_from(values, api_key, partial=false)
      super
      customer = self
      for i in 0..(customer.cards.count - 1)
        puts "entra"
        customer.cards[i].customer = customer
      end
      if customer.subscription
        customer.subscription.customer = customer
      end
    end

#    def create_member(member, params={}, api_key=nil)
#      path = "/customers/#{self.id}/#{member}"
#      response, api_key = Conekta.request(:post, path, api_key, params)
#      obj = Util.convert_to_conekta_object(response, api_key)
#      if obj.class == ConektaObject
#        count = self.cards.count
#        self.cards[count] = obj
#      else
#        self.subscription = obj
#      end
#      obj
#    end

    def create_subscription(params={})
      subscription = create_member('subscription', params)
      subscription.customer = self
      self.subscription = subscription
      subscription
    end

    def create_card(params={})
      card = create_member('cards', params)
      card.customer = self
      self.cards << card
      card
    end
  end
end
